name: CMake

on: [push, pull_request]

jobs:
  build:
    name: Poltergeist CMake 
    runs-on: ${{matrix.os}}

    env:
      buildDir: '${{github.workspace}}/out'
      llvmLocation: '${{github.workspace}}/llvm'
      CC: ${{matrix.cc}}
      CXX: ${{matrix.cxx}}

    strategy:
      matrix:
        os: [windows-latest,ubuntu-latest]
        configuration: ['Debug', 'Release']
        include:
          - os: windows-latest
            generator: 'VS16Win64'
          - os: ubuntu-latest
            generator: 'UnixMakefiles'
          - os: ubuntu-latest
            compiler: gcc
            cc: '/usr/bin/gcc'
            cxx: '/usr/bin/g++'
          - os: ubuntu-latest
            compiler: clang
            cc: '${{env.llvmLocation}}/clang'
            cxx: '${{env.llvmLocation}}/clang++'

    steps:
    - uses: actions/checkout@v2.3.4
      with:
        submodules: 'recursive'

    - if: matrix.os == 'windows-latest'
      name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1

    - if: matrix.os == 'ubuntu-latest'
      name: Install dependencies
      run: |
        sudo apt update
        sudo apt install build-essential gcc clang llvm cmake libxinerama-dev libxcursor-dev xorg-dev libglu1-mesa-dev

    - if: matrix.compiler == 'gcc'
      name: Set up GCC
      uses: egor-tensin/setup-gcc@v1
      with:
        platform: x64

    - if: matrix.compiler == 'clang'
      name: Cache LLVM and Clang
      id: cache-llvm
      uses: actions/cache@v2
      with:
        path: '${{env.llvmLocation}}'
        key: llvm-11
        
    - if: matrix.compiler == 'clang'
      name: Install LLVM and Clang
      uses: KyleMayes/install-llvm-action@v1
      with:
        version: "11"
        directory: '${{env.llvmLocation}}'
        cached: ${{ steps.cache-llvm.outputs.cache-hit }}

    - name: Get latest CMake and ninja
      uses: lukka/get-cmake@latest

    - name: Run vcpkg
      uses: lukka/run-vcpkg@v7.1
      with:
        setupOnly: true
        doNotUpdateVcpkg: true
        vcpkgDirectory: '${{github.workspace}}/vcpkg'
        appendedCacheKey: ${{hashFiles('${{github.workspace}}/vcpkg.json')}}
        additionalCachedPaths: '${{env.buildDir}}/vcpkg_installed'

    - name: Build
      uses: lukka/run-cmake@v3.3
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        useVcpkgToolchainFile: true
        buildWithCMake: true
        cmakeListsTxtPath: '${{github.workspace}}/CMakeLists.txt'
        buildDirectory: ${{env.buildDir}}
        cmakeBuildType: ${{matrix.configuration}}
        cmakeGenerator: ${{matrix.generator}}
